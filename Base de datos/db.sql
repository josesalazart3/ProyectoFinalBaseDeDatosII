-- DROP USER IGSS_ADMIN;

CREATE USER IGSS_ADMIN
-- IDENTIFIED BY <password>
;

CREATE TABLE "IGSS_ADMIN"."AFILIADO" 
   (	"CUI" NUMBER(13,0), 
	"PRIMER_NOMBRE" VARCHAR2(50) NOT NULL ENABLE, 
	"SEGUNDO_NOMBRE" VARCHAR2(50), 
	"PRIMER_APELLIDO" VARCHAR2(50) NOT NULL ENABLE, 
	"SEGUNDO_APELLIDO" VARCHAR2(50), 
	"FECHA_NACIMIENTO" DATE NOT NULL ENABLE, 
	"GENERO" VARCHAR2(1), 
	"DIRECCION" VARCHAR2(200), 
	"TELEFONO" VARCHAR2(15), 
	"EMAIL" VARCHAR2(100), 
	"FECHA_AFILIACION" DATE NOT NULL ENABLE, 
	"ESTADO" VARCHAR2(1) DEFAULT 'A', 
	 CHECK (GENERO IN ('M', 'F', 'O')) ENABLE, 
	 CHECK (ESTADO IN ('A', 'I')) ENABLE, 
	 PRIMARY KEY ("CUI")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS" ;

CREATE OR REPLACE EDITIONABLE TRIGGER "IGSS_ADMIN"."TRG_AUDITORIA_AFILIADO" 
AFTER INSERT OR UPDATE OR DELETE ON IGSS_ADMIN.AFILIADO
FOR EACH ROW
DECLARE
    v_valor_anterior CLOB;
    v_valor_nuevo CLOB;
    v_id_registro VARCHAR2(100);
    v_operacion VARCHAR2(10);
BEGIN
    -- Determinar tipo de operación
    IF INSERTING THEN
        v_operacion := 'INSERT';
        v_id_registro := TO_CHAR(:NEW.CUI);
        
        v_valor_nuevo := JSON_OBJECT(
            'PRIMER_NOMBRE' VALUE :NEW.PRIMER_NOMBRE,
            'SEGUNDO_NOMBRE' VALUE :NEW.SEGUNDO_NOMBRE,
            'PRIMER_APELLIDO' VALUE :NEW.PRIMER_APELLIDO,
            'SEGUNDO_APELLIDO' VALUE :NEW.SEGUNDO_APELLIDO,
            'FECHA_NACIMIENTO' VALUE TO_CHAR(:NEW.FECHA_NACIMIENTO, 'DD/MM/YYYY'),
            'GENERO' VALUE :NEW.GENERO,
            'DIRECCION' VALUE :NEW.DIRECCION,
            'TELEFONO' VALUE :NEW.TELEFONO,
            'EMAIL' VALUE :NEW.EMAIL,
            'FECHA_AFILIACION' VALUE TO_CHAR(:NEW.FECHA_AFILIACION, 'DD/MM/YYYY'),
            'ESTADO' VALUE :NEW.ESTADO
        );
        
    ELSIF UPDATING THEN
        v_operacion := 'UPDATE';
        v_id_registro := TO_CHAR(:NEW.CUI);
        
        v_valor_anterior := JSON_OBJECT(
            'PRIMER_NOMBRE' VALUE :OLD.PRIMER_NOMBRE,
            'SEGUNDO_NOMBRE' VALUE :OLD.SEGUNDO_NOMBRE,
            'PRIMER_APELLIDO' VALUE :OLD.PRIMER_APELLIDO,
            'SEGUNDO_APELLIDO' VALUE :OLD.SEGUNDO_APELLIDO,
            'FECHA_NACIMIENTO' VALUE TO_CHAR(:OLD.FECHA_NACIMIENTO, 'DD/MM/YYYY'),
            'GENERO' VALUE :OLD.GENERO,
            'DIRECCION' VALUE :OLD.DIRECCION,
            'TELEFONO' VALUE :OLD.TELEFONO,
            'EMAIL' VALUE :OLD.EMAIL,
            'FECHA_AFILIACION' VALUE TO_CHAR(:OLD.FECHA_AFILIACION, 'DD/MM/YYYY'),
            'ESTADO' VALUE :OLD.ESTADO
        );
        
        v_valor_nuevo := JSON_OBJECT(
            'PRIMER_NOMBRE' VALUE :NEW.PRIMER_NOMBRE,
            'SEGUNDO_NOMBRE' VALUE :NEW.SEGUNDO_NOMBRE,
            'PRIMER_APELLIDO' VALUE :NEW.PRIMER_APELLIDO,
            'SEGUNDO_APELLIDO' VALUE :NEW.SEGUNDO_APELLIDO,
            'FECHA_NACIMIENTO' VALUE TO_CHAR(:NEW.FECHA_NACIMIENTO, 'DD/MM/YYYY'),
            'GENERO' VALUE :NEW.GENERO,
            'DIRECCION' VALUE :NEW.DIRECCION,
            'TELEFONO' VALUE :NEW.TELEFONO,
            'EMAIL' VALUE :NEW.EMAIL,
            'FECHA_AFILIACION' VALUE TO_CHAR(:NEW.FECHA_AFILIACION, 'DD/MM/YYYY'),
            'ESTADO' VALUE :NEW.ESTADO
        );
        
    ELSIF DELETING THEN
        v_operacion := 'DELETE';
        v_id_registro := TO_CHAR(:OLD.CUI);
        
        v_valor_anterior := JSON_OBJECT(
            'PRIMER_NOMBRE' VALUE :OLD.PRIMER_NOMBRE,
            'SEGUNDO_NOMBRE' VALUE :OLD.SEGUNDO_NOMBRE,
            'PRIMER_APELLIDO' VALUE :OLD.PRIMER_APELLIDO,
            'SEGUNDO_APELLIDO' VALUE :OLD.SEGUNDO_APELLIDO,
            'FECHA_NACIMIENTO' VALUE TO_CHAR(:OLD.FECHA_NACIMIENTO, 'DD/MM/YYYY'),
            'GENERO' VALUE :OLD.GENERO,
            'DIRECCION' VALUE :OLD.DIRECCION,
            'TELEFONO' VALUE :OLD.TELEFONO,
            'EMAIL' VALUE :OLD.EMAIL,
            'FECHA_AFILIACION' VALUE TO_CHAR(:OLD.FECHA_AFILIACION, 'DD/MM/YYYY'),
            'ESTADO' VALUE :OLD.ESTADO
        );
    END IF;
    
    -- Insertar registro de auditoría
    INSERT INTO IGSS_ADMIN.AUDITORIA_SISTEMA (
        TABLA_AFECTADA,
        OPERACION,
        ID_REGISTRO,
        USUARIO,
        MAQUINA,
        MODULO,
        VALOR_ANTERIOR,
        VALOR_NUEVO
    ) VALUES (
        'AFILIADO',
        v_operacion,
        v_id_registro,
        USER,
        SYS_CONTEXT('USERENV', 'HOST'),
        SYS_CONTEXT('USERENV', 'MODULE'),
        v_valor_anterior,
        v_valor_nuevo
    );
EXCEPTION
    WHEN OTHERS THEN
        -- Registrar el error sin afectar la operación principal
        DBMS_OUTPUT.PUT_LINE('Error en auditoría: ' || SQLERRM);
        -- Opcional: Insertar en tabla de errores de auditoría
END;

/
ALTER TRIGGER "IGSS_ADMIN"."TRG_AUDITORIA_AFILIADO" ENABLE;

CREATE UNIQUE INDEX "IGSS_ADMIN"."SYS_C008464" ON "IGSS_ADMIN"."AFILIADO" ("CUI") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS" ;
;

CREATE TABLE "IGSS_ADMIN"."AUDITORIA_SISTEMA" 
   (	"ID_AUDITORIA" NUMBER GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"TABLA_AFECTADA" VARCHAR2(50) NOT NULL ENABLE, 
	"OPERACION" VARCHAR2(10) NOT NULL ENABLE, 
	"ID_REGISTRO" VARCHAR2(100), 
	"USUARIO" VARCHAR2(50) NOT NULL ENABLE, 
	"FECHA_HORA" TIMESTAMP (6) DEFAULT SYSTIMESTAMP NOT NULL ENABLE, 
	"MAQUINA" VARCHAR2(100), 
	"MODULO" VARCHAR2(100), 
	"VALOR_ANTERIOR" CLOB, 
	"VALOR_NUEVO" CLOB, 
	 CONSTRAINT "CHK_OPERACION" CHECK (OPERACION IN ('INSERT', 'UPDATE', 'DELETE')) ENABLE, 
	 CONSTRAINT "PK_AUDITORIA_SISTEMA" PRIMARY KEY ("ID_AUDITORIA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS" 
 LOB ("VALOR_ANTERIOR") STORE AS SECUREFILE (
  TABLESPACE "TS_IGSS_DATOS" ENABLE STORAGE IN ROW 4000 CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 262144 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("VALOR_NUEVO") STORE AS SECUREFILE (
  TABLESPACE "TS_IGSS_DATOS" ENABLE STORAGE IN ROW 4000 CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 262144 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;

CREATE UNIQUE INDEX "IGSS_ADMIN"."SYS_IL0000071363C00009$$" ON "IGSS_ADMIN"."AUDITORIA_SISTEMA" (
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS" 
  PARALLEL (DEGREE 0 INSTANCES 0) ;
  CREATE UNIQUE INDEX "IGSS_ADMIN"."SYS_IL0000071363C00010$$" ON "IGSS_ADMIN"."AUDITORIA_SISTEMA" (
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS" 
  PARALLEL (DEGREE 0 INSTANCES 0) ;
  CREATE UNIQUE INDEX "IGSS_ADMIN"."PK_AUDITORIA_SISTEMA" ON "IGSS_ADMIN"."AUDITORIA_SISTEMA" ("ID_AUDITORIA") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS" ;
;

CREATE TABLE "IGSS_ADMIN"."DETALLE_PAGO" 
   (	"ID_DETALLE" NUMBER GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"ID_SUSPENSION" NUMBER NOT NULL ENABLE, 
	"FECHA_PAGO" DATE NOT NULL ENABLE, 
	"MONTO" NUMBER(10,2) NOT NULL ENABLE, 
	"FORMA_PAGO" VARCHAR2(50), 
	"NUMERO_DOCUMENTO" VARCHAR2(50), 
	 CHECK (FORMA_PAGO IN ('TRANSFERENCIA', 'CHEQUE', 'EFECTIVO')) ENABLE, 
	 PRIMARY KEY ("ID_DETALLE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS" ;

ALTER TABLE "IGSS_ADMIN"."DETALLE_PAGO" ADD CONSTRAINT "FK_DETALLE_SUSPENSION" FOREIGN KEY ("ID_SUSPENSION")
	  REFERENCES "IGSS_ADMIN"."SUSPENSION" ("ID_SUSPENSION") ENABLE;

CREATE UNIQUE INDEX "IGSS_ADMIN"."SYS_C008492" ON "IGSS_ADMIN"."DETALLE_PAGO" ("ID_DETALLE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS" ;
;

CREATE TABLE "IGSS_ADMIN"."DIM_AFILIADO" 
   (	"CUI" NUMBER(13,0), 
	"NOMBRE_COMPLETO" VARCHAR2(101), 
	"GENERO" VARCHAR2(1), 
	"FECHA_NACIMIENTO" DATE NOT NULL ENABLE, 
	"FECHA_AFILIACION" DATE NOT NULL ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS" ;
;

CREATE TABLE "IGSS_ADMIN"."DIM_TIEMPO" 
   (	"ID_TIEMPO" NUMBER, 
	"FECHA" DATE NOT NULL ENABLE, 
	"DIA" NUMBER, 
	"MES" NUMBER, 
	"ANIO" NUMBER, 
	"NOMBRE_MES" VARCHAR2(20), 
	"DIA_SEMANA" VARCHAR2(15), 
	 PRIMARY KEY ("ID_TIEMPO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS" ;

CREATE UNIQUE INDEX "IGSS_ADMIN"."SYS_C008508" ON "IGSS_ADMIN"."DIM_TIEMPO" ("ID_TIEMPO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS" ;
;

CREATE TABLE "IGSS_ADMIN"."ENFERMEDAD" 
   (	"CODIGO_ENFERMEDAD" VARCHAR2(10), 
	"NOMBRE_ENFERMEDAD" VARCHAR2(100) NOT NULL ENABLE, 
	"DESCRIPCION" VARCHAR2(500), 
	"DIAS_PROMEDIO" NUMBER(3,0) NOT NULL ENABLE, 
	"ESTADO" VARCHAR2(1) DEFAULT 'A', 
	 CHECK (ESTADO IN ('A', 'I')) ENABLE, 
	 PRIMARY KEY ("CODIGO_ENFERMEDAD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS" ;

CREATE UNIQUE INDEX "IGSS_ADMIN"."SYS_C008468" ON "IGSS_ADMIN"."ENFERMEDAD" ("CODIGO_ENFERMEDAD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS" ;
;

CREATE TABLE "IGSS_ADMIN"."MLOG$_ENFERMEDAD" 
   (	"CODIGO_ENFERMEDAD" VARCHAR2(10), 
	"SNAPTIME$$" DATE, 
	"DMLTYPE$$" VARCHAR2(1), 
	"OLD_NEW$$" VARCHAR2(1), 
	"CHANGE_VECTOR$$" RAW(513), 
	"XID$$" NUMBER
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 30 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "TS_IGSS_DATOS" ;

CREATE INDEX "IGSS_ADMIN"."I_MLOG$_ENFERMEDAD" ON "IGSS_ADMIN"."MLOG$_ENFERMEDAD" ("XID$$") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "TS_IGSS_DATOS" ;

COMMENT ON TABLE IGSS_ADMIN."MLOG$_ENFERMEDAD" IS 'snapshot log for master table IGSS_ADMIN.ENFERMEDAD';

CREATE TABLE "IGSS_ADMIN"."MLOG$_SUSPENSION" 
   (	"ID_SUSPENSION" NUMBER, 
	"SNAPTIME$$" DATE, 
	"DMLTYPE$$" VARCHAR2(1), 
	"OLD_NEW$$" VARCHAR2(1), 
	"CHANGE_VECTOR$$" RAW(513), 
	"XID$$" NUMBER
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 30 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "TS_IGSS_DATOS" ;

CREATE INDEX "IGSS_ADMIN"."I_MLOG$_SUSPENSION" ON "IGSS_ADMIN"."MLOG$_SUSPENSION" ("XID$$") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "TS_IGSS_DATOS" ;

COMMENT ON TABLE IGSS_ADMIN."MLOG$_SUSPENSION" IS 'snapshot log for master table IGSS_ADMIN.SUSPENSION';

CREATE TABLE "IGSS_ADMIN"."MV_AFILIADOS_SUSPENSIONES" 
   (	"CUI" NUMBER(13,0), 
	"NOMBRE_COMPLETO" VARCHAR2(101), 
	"TOTAL_SUSPENSIONES" NUMBER, 
	"MONTO_TOTAL" NUMBER, 
	"ULTIMA_SUSPENSION" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS" ;
;

CREATE MATERIALIZED VIEW "IGSS_ADMIN"."MV_AFILIADOS_SUSPENSIONES" ("CUI", "NOMBRE_COMPLETO", "TOTAL_SUSPENSIONES", "MONTO_TOTAL", "ULTIMA_SUSPENSION")
  SEGMENT CREATION IMMEDIATE
  ORGANIZATION HEAP PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS" 
  BUILD IMMEDIATE
  USING INDEX 
  REFRESH COMPLETE ON DEMAND
  USING DEFAULT LOCAL ROLLBACK SEGMENT
  USING ENFORCED CONSTRAINTS DISABLE ON QUERY COMPUTATION DISABLE QUERY REWRITE DISABLE CONCURRENT REFRESH
  AS SELECT 
    a.CUI,
    a.PRIMER_NOMBRE || ' ' || a.PRIMER_APELLIDO AS NOMBRE_COMPLETO,
    COUNT(s.ID_SUSPENSION) AS TOTAL_SUSPENSIONES,
    SUM(s.MONTO_PAGO) AS MONTO_TOTAL,
    MAX(s.FECHA_INICIO) AS ULTIMA_SUSPENSION
FROM 
    IGSS_ADMIN.AFILIADO a
LEFT JOIN 
    IGSS_ADMIN.SUSPENSION s ON a.CUI = s.CUI AND s.ESTADO = 'A'
GROUP BY 
    a.CUI, a.PRIMER_NOMBRE, a.PRIMER_APELLIDO
;

COMMENT ON MATERIALIZED VIEW IGSS_ADMIN.MV_AFILIADOS_SUSPENSIONES IS 'snapshot table for snapshot IGSS_ADMIN.MV_AFILIADOS_SUSPENSIONES';

CREATE TABLE "IGSS_ADMIN"."MV_PAGO_POR_ENFERMEDAD" 
   (	"CODIGO_ENFERMEDAD" VARCHAR2(10), 
	"NOMBRE_ENFERMEDAD" VARCHAR2(100) NOT NULL ENABLE, 
	"NUM_SUSPENSIONES" NUMBER, 
	"TOTAL_PAGADO" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS" ;

CREATE UNIQUE INDEX "IGSS_ADMIN"."I_SNAP$_MV_PAGO_POR_ENFERMEDAD" ON "IGSS_ADMIN"."MV_PAGO_POR_ENFERMEDAD" (SYS_OP_MAP_NONNULL("CODIGO_ENFERMEDAD"), SYS_OP_MAP_NONNULL("NOMBRE_ENFERMEDAD")) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS" ;
;

CREATE MATERIALIZED VIEW "IGSS_ADMIN"."MV_PAGO_POR_ENFERMEDAD" ("CODIGO_ENFERMEDAD", "NOMBRE_ENFERMEDAD", "NUM_SUSPENSIONES", "TOTAL_PAGADO")
  SEGMENT CREATION IMMEDIATE
  ORGANIZATION HEAP PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS" 
  BUILD IMMEDIATE
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS" 
  REFRESH COMPLETE ON DEMAND
  USING DEFAULT LOCAL ROLLBACK SEGMENT
  USING ENFORCED CONSTRAINTS DISABLE ON QUERY COMPUTATION DISABLE QUERY REWRITE DISABLE CONCURRENT REFRESH
  AS SELECT 
    e.CODIGO_ENFERMEDAD,
    e.NOMBRE_ENFERMEDAD,
    COUNT(s.ID_SUSPENSION) AS NUM_SUSPENSIONES,
    SUM(s.MONTO_PAGO) AS TOTAL_PAGADO
FROM 
    IGSS_ADMIN.SUSPENSION s
JOIN 
    IGSS_ADMIN.ENFERMEDAD e ON s.CODIGO_ENFERMEDAD = e.CODIGO_ENFERMEDAD
WHERE 
    s.ESTADO = 'A'
GROUP BY 
    e.CODIGO_ENFERMEDAD, e.NOMBRE_ENFERMEDAD
;

COMMENT ON MATERIALIZED VIEW IGSS_ADMIN.MV_PAGO_POR_ENFERMEDAD IS 'snapshot table for snapshot IGSS_ADMIN.MV_PAGO_POR_ENFERMEDAD';

CREATE TABLE "IGSS_ADMIN"."MV_PRESUPUESTO_EJECUTADO" 
   (	"ANIO" NUMBER(4,0), 
	"MONTO_ASIGNADO" NUMBER(15,2) NOT NULL ENABLE, 
	"MONTO_EJECUTADO" NUMBER(15,2), 
	"SALDO_RESTANTE" NUMBER, 
	"PORCENTAJE_EJECUCION" NUMBER, 
	 PRIMARY KEY ("ANIO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS" ;

CREATE UNIQUE INDEX "IGSS_ADMIN"."SYS_C008511" ON "IGSS_ADMIN"."MV_PRESUPUESTO_EJECUTADO" ("ANIO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS" ;
;

CREATE MATERIALIZED VIEW "IGSS_ADMIN"."MV_PRESUPUESTO_EJECUTADO" ("ANIO", "MONTO_ASIGNADO", "MONTO_EJECUTADO", "SALDO_RESTANTE", "PORCENTAJE_EJECUCION")
  SEGMENT CREATION IMMEDIATE
  ORGANIZATION HEAP PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS" 
  BUILD IMMEDIATE
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS" 
  REFRESH COMPLETE ON DEMAND
  WITH PRIMARY KEY USING DEFAULT LOCAL ROLLBACK SEGMENT
  USING ENFORCED CONSTRAINTS DISABLE ON QUERY COMPUTATION DISABLE QUERY REWRITE DISABLE CONCURRENT REFRESH
  AS SELECT 
    ANIO,
    MONTO_ASIGNADO,
    MONTO_EJECUTADO,
    (MONTO_ASIGNADO - MONTO_EJECUTADO) AS SALDO_RESTANTE,
    ROUND((MONTO_EJECUTADO / NULLIF(MONTO_ASIGNADO, 0)) * 100, 2) AS PORCENTAJE_EJECUCION
FROM 
    IGSS_ADMIN.PRESUPUESTO_ANUAL
;

COMMENT ON MATERIALIZED VIEW IGSS_ADMIN.MV_PRESUPUESTO_EJECUTADO IS 'snapshot table for snapshot IGSS_ADMIN.MV_PRESUPUESTO_EJECUTADO';

CREATE TABLE "IGSS_ADMIN"."MV_RESUMEN_ANUAL_ENFERMEDAD" 
   (	"ANIO" NUMBER, 
	"CODIGO_ENFERMEDAD" VARCHAR2(10) NOT NULL ENABLE, 
	"NOMBRE_ENFERMEDAD" VARCHAR2(100) NOT NULL ENABLE, 
	"NUM_SUSPENSIONES" NUMBER, 
	"TOTAL_PAGADO" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS" ;

CREATE UNIQUE INDEX "IGSS_ADMIN"."I_SNAP$_MV_RESUMEN_ANUAL_ENFERMEDAD" ON "IGSS_ADMIN"."MV_RESUMEN_ANUAL_ENFERMEDAD" (SYS_OP_MAP_NONNULL("ANIO"), SYS_OP_MAP_NONNULL("CODIGO_ENFERMEDAD"), SYS_OP_MAP_NONNULL("NOMBRE_ENFERMEDAD")) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS" ;
;

CREATE MATERIALIZED VIEW "IGSS_ADMIN"."MV_RESUMEN_ANUAL_ENFERMEDAD" ("ANIO", "CODIGO_ENFERMEDAD", "NOMBRE_ENFERMEDAD", "NUM_SUSPENSIONES", "TOTAL_PAGADO")
  SEGMENT CREATION IMMEDIATE
  ORGANIZATION HEAP PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS" 
  BUILD IMMEDIATE
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS" 
  REFRESH COMPLETE ON DEMAND
  USING DEFAULT LOCAL ROLLBACK SEGMENT
  USING ENFORCED CONSTRAINTS DISABLE ON QUERY COMPUTATION DISABLE QUERY REWRITE DISABLE CONCURRENT REFRESH
  AS SELECT 
    EXTRACT(YEAR FROM s.FECHA_INICIO) AS ANIO,
    s.CODIGO_ENFERMEDAD,
    e.NOMBRE_ENFERMEDAD,
    COUNT(*) AS NUM_SUSPENSIONES,
    SUM(s.MONTO_PAGO) AS TOTAL_PAGADO
FROM IGSS_ADMIN.SUSPENSION s
JOIN IGSS_ADMIN.ENFERMEDAD e ON s.CODIGO_ENFERMEDAD = e.CODIGO_ENFERMEDAD
WHERE s.ESTADO = 'A'
GROUP BY EXTRACT(YEAR FROM s.FECHA_INICIO), s.CODIGO_ENFERMEDAD, e.NOMBRE_ENFERMEDAD
;

COMMENT ON MATERIALIZED VIEW IGSS_ADMIN.MV_RESUMEN_ANUAL_ENFERMEDAD IS 'snapshot table for snapshot IGSS_ADMIN.MV_RESUMEN_ANUAL_ENFERMEDAD';

CREATE TABLE "IGSS_ADMIN"."MV_SUSPENSION_POR_AFILIADO_ANIO" 
   (	"CUI" NUMBER(13,0), 
	"NOMBRE" VARCHAR2(101), 
	"ANIO" NUMBER, 
	"TOTAL_SUSPENSIONES" NUMBER, 
	"TOTAL_PAGADO" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS" ;
;

CREATE MATERIALIZED VIEW "IGSS_ADMIN"."MV_SUSPENSION_POR_AFILIADO_ANIO" ("CUI", "NOMBRE", "ANIO", "TOTAL_SUSPENSIONES", "TOTAL_PAGADO")
  SEGMENT CREATION IMMEDIATE
  ORGANIZATION HEAP PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS" 
  BUILD IMMEDIATE
  USING INDEX 
  REFRESH COMPLETE ON DEMAND
  USING DEFAULT LOCAL ROLLBACK SEGMENT
  USING ENFORCED CONSTRAINTS DISABLE ON QUERY COMPUTATION DISABLE QUERY REWRITE DISABLE CONCURRENT REFRESH
  AS SELECT 
    a.CUI,
    a.PRIMER_NOMBRE || ' ' || a.PRIMER_APELLIDO AS NOMBRE,
    EXTRACT(YEAR FROM s.FECHA_INICIO) AS ANIO,
    COUNT(*) AS TOTAL_SUSPENSIONES,
    SUM(s.MONTO_PAGO) AS TOTAL_PAGADO
FROM 
    IGSS_ADMIN.SUSPENSION s
JOIN 
    IGSS_ADMIN.AFILIADO a ON s.CUI = a.CUI
WHERE 
    s.ESTADO = 'A'
GROUP BY 
    a.CUI, a.PRIMER_NOMBRE, a.PRIMER_APELLIDO, EXTRACT(YEAR FROM s.FECHA_INICIO)
;

COMMENT ON MATERIALIZED VIEW IGSS_ADMIN.MV_SUSPENSION_POR_AFILIADO_ANIO IS 'snapshot table for snapshot IGSS_ADMIN.MV_SUSPENSION_POR_AFILIADO_ANIO';

CREATE TABLE "IGSS_ADMIN"."MV_SUSPENSION_TIEMPO" 
   (	"ANIO" NUMBER, 
	"MES" NUMBER, 
	"NOMBRE_MES" VARCHAR2(20), 
	"DIA_SEMANA" VARCHAR2(15), 
	"TOTAL_SUSPENSIONES" NUMBER, 
	"TOTAL_PAGADO" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS" ;

CREATE UNIQUE INDEX "IGSS_ADMIN"."I_SNAP$_MV_SUSPENSION_TIEMPO" ON "IGSS_ADMIN"."MV_SUSPENSION_TIEMPO" (SYS_OP_MAP_NONNULL("ANIO"), SYS_OP_MAP_NONNULL("MES"), SYS_OP_MAP_NONNULL("NOMBRE_MES"), SYS_OP_MAP_NONNULL("DIA_SEMANA")) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS" ;
;

CREATE MATERIALIZED VIEW "IGSS_ADMIN"."MV_SUSPENSION_TIEMPO" ("ANIO", "MES", "NOMBRE_MES", "DIA_SEMANA", "TOTAL_SUSPENSIONES", "TOTAL_PAGADO")
  SEGMENT CREATION IMMEDIATE
  ORGANIZATION HEAP PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS" 
  BUILD IMMEDIATE
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS" 
  REFRESH COMPLETE ON DEMAND
  USING DEFAULT LOCAL ROLLBACK SEGMENT
  USING ENFORCED CONSTRAINTS DISABLE ON QUERY COMPUTATION DISABLE QUERY REWRITE DISABLE CONCURRENT REFRESH
  AS SELECT 
    t.ANIO,
    t.MES,
    t.NOMBRE_MES,
    t.DIA_SEMANA,
    COUNT(s.ID_SUSPENSION) AS TOTAL_SUSPENSIONES,
    SUM(s.MONTO_PAGO) AS TOTAL_PAGADO
FROM 
    IGSS_ADMIN.SUSPENSION s
JOIN 
    IGSS_ADMIN.DIM_TIEMPO t ON TRUNC(s.FECHA_INICIO) = t.FECHA
WHERE 
    s.ESTADO = 'A'
GROUP BY 
    t.ANIO, t.MES, t.NOMBRE_MES, t.DIA_SEMANA
;

COMMENT ON MATERIALIZED VIEW IGSS_ADMIN.MV_SUSPENSION_TIEMPO IS 'snapshot table for snapshot IGSS_ADMIN.MV_SUSPENSION_TIEMPO';

CREATE TABLE "IGSS_ADMIN"."PRESUPUESTO_ANUAL" 
   (	"ANIO" NUMBER(4,0), 
	"MONTO_ASIGNADO" NUMBER(15,2) NOT NULL ENABLE, 
	"MONTO_EJECUTADO" NUMBER(15,2) DEFAULT 0, 
	"FECHA_APROBACION" DATE, 
	"OBSERVACIONES" VARCHAR2(500), 
	 PRIMARY KEY ("ANIO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS" ;

CREATE UNIQUE INDEX "IGSS_ADMIN"."SYS_C008470" ON "IGSS_ADMIN"."PRESUPUESTO_ANUAL" ("ANIO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS" ;
;

CREATE TABLE "IGSS_ADMIN"."PROYECCION_PRESUPUESTO" 
   (	"ID_PROYECCION" NUMBER GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"ANIO" NUMBER(4,0) NOT NULL ENABLE, 
	"MONTO_PROYECTADO" NUMBER(15,2) NOT NULL ENABLE, 
	"FACTOR_INCREMENTO" NUMBER(5,2) NOT NULL ENABLE, 
	"FECHA_CALCULO" DATE DEFAULT SYSDATE, 
	"OBSERVACIONES" VARCHAR2(500), 
	 PRIMARY KEY ("ID_PROYECCION")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS" ;

CREATE UNIQUE INDEX "IGSS_ADMIN"."SYS_C008486" ON "IGSS_ADMIN"."PROYECCION_PRESUPUESTO" ("ID_PROYECCION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS" ;
;

CREATE TABLE "IGSS_ADMIN"."SUSPENSION" 
   (	"ID_SUSPENSION" NUMBER GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"CUI" NUMBER(13,0) NOT NULL ENABLE, 
	"CODIGO_ENFERMEDAD" VARCHAR2(10) NOT NULL ENABLE, 
	"FECHA_INICIO" DATE NOT NULL ENABLE, 
	"FECHA_FIN" DATE NOT NULL ENABLE, 
	"DIAS_SUSPENDIDO" NUMBER(3,0) NOT NULL ENABLE, 
	"MONTO_PAGO" NUMBER(10,2) NOT NULL ENABLE, 
	"ESTADO" VARCHAR2(1) DEFAULT 'P', 
	"FECHA_REGISTRO" DATE DEFAULT SYSDATE, 
	"FECHA_APROBACION" DATE, 
	 CHECK (ESTADO IN ('P', 'A', 'R')) ENABLE, 
	 PRIMARY KEY ("ID_SUSPENSION")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS" ;

ALTER TABLE "IGSS_ADMIN"."SUSPENSION" ADD CONSTRAINT "FK_SUSPENSION_AFILIADO" FOREIGN KEY ("CUI")
	  REFERENCES "IGSS_ADMIN"."AFILIADO" ("CUI") ENABLE;
  ALTER TABLE "IGSS_ADMIN"."SUSPENSION" ADD CONSTRAINT "FK_SUSPENSION_ENFERMEDAD" FOREIGN KEY ("CODIGO_ENFERMEDAD")
	  REFERENCES "IGSS_ADMIN"."ENFERMEDAD" ("CODIGO_ENFERMEDAD") ENABLE;

CREATE UNIQUE INDEX "IGSS_ADMIN"."SYS_C008479" ON "IGSS_ADMIN"."SUSPENSION" ("ID_SUSPENSION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_IGSS_DATOS" ;
;

CREATE OR REPLACE FORCE EDITIONABLE VIEW "IGSS_ADMIN"."V_AFILIADOS_SUSPENSIONES" ("CUI", "NOMBRE_COMPLETO", "TOTAL_SUSPENSIONES", "MONTO_TOTAL", "ULTIMA_SUSPENSION") AS 
  SELECT 
    a.CUI,
    a.PRIMER_NOMBRE || ' ' || a.PRIMER_APELLIDO AS NOMBRE_COMPLETO,
    COUNT(s.ID_SUSPENSION) AS TOTAL_SUSPENSIONES,
    SUM(s.MONTO_PAGO) AS MONTO_TOTAL,
    MAX(s.FECHA_INICIO) AS ULTIMA_SUSPENSION
FROM 
    AFILIADO a
LEFT JOIN 
    SUSPENSION s ON a.CUI = s.CUI
GROUP BY 
    a.CUI, a.PRIMER_NOMBRE, a.PRIMER_APELLIDO;
;

CREATE OR REPLACE PROCEDURE IGSS_ADMIN.SP_APROBAR_SUSPENSION(
    p_id_suspension IN NUMBER,
    p_monto_pago IN NUMBER,
    p_resultado OUT VARCHAR2
) AS
    v_anio NUMBER;
    v_saldo NUMBER(15,2);
    v_estado_actual VARCHAR2(1);
    v_cui_afiliado NUMBER(13,0);
    v_dias_suspension NUMBER(3,0);
BEGIN
    -- Obtener año desde FECHA_INICIO, no FECHA_REGISTRO
    SELECT 
        EXTRACT(YEAR FROM FECHA_INICIO),
        ESTADO,
        CUI,
        DIAS_SUSPENDIDO
    INTO 
        v_anio,
        v_estado_actual,
        v_cui_afiliado,
        v_dias_suspension
    FROM IGSS_ADMIN.SUSPENSION
    WHERE ID_SUSPENSION = p_id_suspension;

    -- Validaciones de estado
    IF v_estado_actual = 'A' THEN
        p_resultado := 'Error: La suspensión ya está aprobada.';
        RETURN;
    ELSIF v_estado_actual = 'R' THEN
        p_resultado := 'Error: La suspensión fue rechazada y no puede aprobarse.';
        RETURN;
    END IF;

    -- Verificar saldo disponible (con bloqueo)
    SELECT (MONTO_ASIGNADO - MONTO_EJECUTADO)
    INTO v_saldo
    FROM IGSS_ADMIN.PRESUPUESTO_ANUAL
    WHERE ANIO = v_anio
    FOR UPDATE;

    IF v_saldo >= p_monto_pago THEN
        -- Aprobar suspensión
        UPDATE IGSS_ADMIN.SUSPENSION
        SET ESTADO = 'A',
            MONTO_PAGO = p_monto_pago,
            FECHA_APROBACION = SYSDATE,
            FECHA_REGISTRO = SYSDATE -- forzar año correcto
        WHERE ID_SUSPENSION = p_id_suspension;

        -- Actualizar presupuesto
        UPDATE IGSS_ADMIN.PRESUPUESTO_ANUAL
        SET MONTO_EJECUTADO = MONTO_EJECUTADO + p_monto_pago
        WHERE ANIO = v_anio;

        -- Registrar en historial
        INSERT INTO IGSS_ADMIN.DETALLE_PAGO (
            ID_SUSPENSION,
            FECHA_PAGO,
            MONTO,
            FORMA_PAGO
        ) VALUES (
            p_id_suspension,
            SYSDATE,
            p_monto_pago,
            'TRANSFERENCIA'
        );

        p_resultado := '✅ Aprobada suspensión para afiliado CUI ' || v_cui_afiliado || 
                       ' por ' || v_dias_suspension || ' días en ' || v_anio;
        COMMIT;
    ELSE
        p_resultado := '❌ Saldo insuficiente en el presupuesto ' || v_anio ||
                       '. Disponible: ' || TO_CHAR(v_saldo, 'L999G999G990D00') || 
                       ', Requerido: ' || TO_CHAR(p_monto_pago, 'L999G999G990D00');
        ROLLBACK;
    END IF;

EXCEPTION
    WHEN NO_DATA_FOUND THEN
        p_resultado := '❌ No se encontró la suspensión con ID ' || p_id_suspension;
        ROLLBACK;
    WHEN OTHERS THEN
        p_resultado := '❌ Error: ' || SUBSTR(SQLERRM, 1, 200);
        ROLLBACK;
END;
;

CREATE OR REPLACE PROCEDURE IGSS_ADMIN.SP_CALCULAR_PAGO_POR_ANIO(
    p_id_suspension IN NUMBER,
    p_resultado OUT VARCHAR2,
    p_monto_total OUT NUMBER
) AS
    v_fecha_inicio DATE;
    v_fecha_fin DATE;
    v_cui_afiliado NUMBER(13,0);
    v_salario_diario NUMBER(10,2);
    v_porcentaje_pago NUMBER(5,2) := 0.66;
    v_anio_inicio NUMBER;
    v_anio_fin NUMBER;
    v_dias_por_anio NUMBER;
    v_monto_anual NUMBER(10,2);
    v_detalle CLOB := '';
BEGIN
    -- Obtener datos básicos con manejo de errores
    BEGIN
        SELECT s.FECHA_INICIO, s.FECHA_FIN, a.CUI,
               NVL((SELECT SALARIO_BASE/30 FROM IGSS_ADMIN.AFILIADO WHERE CUI = s.CUI), 100)
        INTO v_fecha_inicio, v_fecha_fin, v_cui_afiliado, v_salario_diario
        FROM IGSS_ADMIN.SUSPENSION s
        JOIN IGSS_ADMIN.AFILIADO a ON s.CUI = a.CUI
        WHERE s.ID_SUSPENSION = p_id_suspension;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            RAISE_APPLICATION_ERROR(-20001, 'No se encontró la suspensión con ID ' || p_id_suspension);
    END;
    
    -- Inicializar variables
    p_monto_total := 0;
    v_anio_inicio := EXTRACT(YEAR FROM v_fecha_inicio);
    v_anio_fin := EXTRACT(YEAR FROM v_fecha_fin);
    
    -- Calcular para cada año afectado
    FOR anio IN v_anio_inicio..v_anio_fin LOOP
        -- Determinar días correspondientes a este año
        IF anio = v_anio_inicio AND anio = v_anio_fin THEN
            -- Suspensión dentro del mismo año
            v_dias_por_anio := v_fecha_fin - v_fecha_inicio;
        ELSIF anio = v_anio_inicio THEN
            -- Primer año (desde fecha inicio hasta fin de año)
            v_dias_por_anio := TO_DATE('31/12/'||anio, 'DD/MM/YYYY') - v_fecha_inicio + 1;
        ELSIF anio = v_anio_fin THEN
            -- Último año (desde inicio de año hasta fecha fin)
            v_dias_por_anio := v_fecha_fin - TO_DATE('01/01/'||anio, 'DD/MM/YYYY');
        ELSE
            -- Años intermedios (todo el año)
            v_dias_por_anio := TO_DATE('31/12/'||anio, 'DD/MM/YYYY') - TO_DATE('01/01/'||anio, 'DD/MM/YYYY') + 1;
        END IF;
        
        -- Calcular monto para este año
        v_monto_anual := ROUND((v_salario_diario * v_porcentaje_pago) * v_dias_por_anio, 2);
        p_monto_total := p_monto_total + v_monto_anual;
        
        -- Agregar al detalle
        v_detalle := v_detalle || 'Año ' || anio || ': ' || v_dias_por_anio || 
                    ' días = Q' || TO_CHAR(v_monto_anual, '999G990D99') || CHR(10);
    END LOOP;
    
    -- Formatear resultado final
    p_resultado := 'Cálculo por años para CUI ' || v_cui_afiliado || CHR(10) ||
                  'Período: ' || TO_CHAR(v_fecha_inicio, 'DD/MM/YYYY') || ' - ' || 
                  TO_CHAR(v_fecha_fin, 'DD/MM/YYYY') || CHR(10) ||
                  'Salario diario: Q' || TO_CHAR(v_salario_diario, '999G990D99') || CHR(10) ||
                  'Porcentaje: ' || (v_porcentaje_pago*100) || '%' || CHR(10) || CHR(10) ||
                  'Desglose por años:' || CHR(10) || v_detalle || CHR(10) ||
                  'TOTAL: Q' || TO_CHAR(p_monto_total, '9G999G990D99');
EXCEPTION
    WHEN OTHERS THEN
        p_resultado := 'Error en SP_CALCULAR_PAGO_POR_ANIO: ' || SUBSTR(SQLERRM, 1, 200);
        p_monto_total := 0;
END;
;

CREATE OR REPLACE PROCEDURE IGSS_ADMIN.SP_EVALUAR_PAGO_SUSPENSION(
    p_id_suspension IN NUMBER,
    p_resultado OUT VARCHAR2,
    p_monto_calculado OUT NUMBER
) AS
    v_fecha_inicio DATE;
    v_fecha_fin DATE;
    v_dias_suspension NUMBER;
    v_anios NUMBER;
    v_meses NUMBER;
    v_dias NUMBER;
    v_salario_diario NUMBER(10,2);
    v_porcentaje_pago NUMBER(5,2) := 0.66; -- 66% del salario
    v_cui_afiliado NUMBER(13,0);
BEGIN
    -- Obtener datos de la suspensión con manejo de errores mejorado
    BEGIN
        SELECT s.FECHA_INICIO, s.FECHA_FIN, s.DIAS_SUSPENDIDO, a.CUI,
               NVL((SELECT SALARIO_BASE/30 FROM IGSS_ADMIN.AFILIADO WHERE CUI = s.CUI), 100)
        INTO v_fecha_inicio, v_fecha_fin, v_dias_suspension, v_cui_afiliado, v_salario_diario
        FROM IGSS_ADMIN.SUSPENSION s
        JOIN IGSS_ADMIN.AFILIADO a ON s.CUI = a.CUI
        WHERE s.ID_SUSPENSION = p_id_suspension;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            RAISE_APPLICATION_ERROR(-20001, 'No se encontró la suspensión con ID ' || p_id_suspension);
    END;
    
    -- Calcular años, meses y días exactos (cálculo mejorado)
    v_anios := FLOOR(MONTHS_BETWEEN(v_fecha_fin, v_fecha_inicio)/12);
    v_meses := MOD(FLOOR(MONTHS_BETWEEN(v_fecha_fin, v_fecha_inicio)), 12);
    v_dias := v_fecha_fin - ADD_MONTHS(v_fecha_inicio, FLOOR(MONTHS_BETWEEN(v_fecha_fin, v_fecha_inicio)));
    
    -- Calcular monto basado en el tiempo exacto
    p_monto_calculado := ROUND((v_salario_diario * v_porcentaje_pago) * (v_anios * 365 + v_meses * 30 + v_dias), 2);
    
    -- Formatear resultado descriptivo
    p_resultado := 'Evaluación para CUI ' || v_cui_afiliado || ': ' || 
                  v_anios || ' año(s), ' || v_meses || ' mes(es), ' || v_dias || ' día(s)' || CHR(10) ||
                  'Salario diario: Q' || TO_CHAR(v_salario_diario, '999G990D99') || CHR(10) ||
                  'Porcentaje de pago: ' || (v_porcentaje_pago*100) || '%' || CHR(10) ||
                  'Total calculado: Q' || TO_CHAR(p_monto_calculado, '999G999G990D99');
EXCEPTION
    WHEN OTHERS THEN
        p_resultado := 'Error en SP_EVALUAR_PAGO_SUSPENSION: ' || SUBSTR(SQLERRM, 1, 200);
        p_monto_calculado := 0;
END;
;

CREATE OR REPLACE PROCEDURE IGSS_ADMIN.SP_GENERAR_PROYECCION(
    p_anios_proyectar IN NUMBER,
    p_factor IN NUMBER DEFAULT 1.05,
    p_resultado OUT VARCHAR2
) AS
    v_ultimo_anio NUMBER;
    v_ultimo_monto NUMBER(15,2);
    v_anio_base NUMBER;
    v_monto_base NUMBER(15,2);
    v_existen_proyecciones NUMBER;
BEGIN
    -- Validar parámetros de entrada
    IF p_anios_proyectar IS NULL OR p_anios_proyectar <= 0 THEN
        p_resultado := 'Error: Debe especificar un número positivo de años a proyectar';
        RETURN;
    END IF;
    
    IF p_factor IS NULL OR p_factor <= 0 THEN
        p_resultado := 'Error: El factor de incremento debe ser un número positivo';
        RETURN;
    END IF;
    
    -- Obtener último año con presupuesto real (no proyección)
    BEGIN
        SELECT MAX(ANIO), MAX(MONTO_ASIGNADO) 
        INTO v_anio_base, v_monto_base
        FROM IGSS_ADMIN.PRESUPUESTO_ANUAL
        WHERE FECHA_APROBACION IS NOT NULL; -- Solo presupuestos aprobados
        
        -- Verificar si ya existen proyecciones para estos años
        SELECT COUNT(1) INTO v_existen_proyecciones
        FROM IGSS_ADMIN.PROYECCION_PRESUPUESTO
        WHERE ANIO BETWEEN v_anio_base + 1 AND v_anio_base + p_anios_proyectar;
        
        IF v_existen_proyecciones > 0 THEN
            p_resultado := 'Advertencia: Ya existen proyecciones para algunos de los años solicitados. Se actualizarán.';
            
            -- Eliminar proyecciones existentes para estos años
            DELETE FROM IGSS_ADMIN.PROYECCION_PRESUPUESTO
            WHERE ANIO BETWEEN v_anio_base + 1 AND v_anio_base + p_anios_proyectar;
        END IF;
        
        -- Insertar nuevas proyecciones
        FOR i IN 1..p_anios_proyectar LOOP
            INSERT INTO IGSS_ADMIN.PROYECCION_PRESUPUESTO (
                ANIO, 
                MONTO_PROYECTADO, 
                FACTOR_INCREMENTO,
                FECHA_CALCULO,
                OBSERVACIONES
            ) VALUES (
                v_anio_base + i, 
                ROUND(v_monto_base * POWER(p_factor, i), 2), 
                p_factor,
                SYSDATE,
                'Proyección generada automáticamente con factor ' || p_factor
            );
        END LOOP;
        
        p_resultado := 'Proyección generada exitosamente para ' || p_anios_proyectar || 
                      ' años a partir del ' || v_anio_base || 
                      ' con factor de incremento anual del ' || (p_factor-1)*100 || '%';
        COMMIT;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            p_resultado := 'Error: No se encontró presupuesto base para generar proyecciones';
            ROLLBACK;
        WHEN OTHERS THEN
            p_resultado := 'Error al generar proyección: ' || SUBSTR(SQLERRM, 1, 200);
            ROLLBACK;
    END;
END;
;

CREATE SEQUENCE IGSS_ADMIN."ISEQ$$_71324" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE IGSS_ADMIN."ISEQ$$_71327" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE IGSS_ADMIN."ISEQ$$_71330" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE IGSS_ADMIN."ISEQ$$_71339" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE IGSS_ADMIN."ISEQ$$_71342" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE IGSS_ADMIN."ISEQ$$_71345" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE IGSS_ADMIN."ISEQ$$_71352" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE IGSS_ADMIN."ISEQ$$_71363" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE CACHE 20 NOORDER ;

CREATE SEQUENCE IGSS_ADMIN.SEQ_AFILIADO_ID INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE NOCACHE NOORDER ;

CREATE SEQUENCE IGSS_ADMIN.SEQ_ENFERMEDAD_ID INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCYCLE NOCACHE NOORDER ;